#############################################################################
# Makefile for building: cryptopp
# Generated by qmake (2.01a) (Qt 4.8.1) on: ?? 4. ??? 00:12:15 2020
# Project:  cryptopp.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DCRYPTOPP_LIBRARY -DQT_DLL -DQT_NO_DEBUG -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -w $(DEFINES)
CXXFLAGS      = -O2 -w -frtti -fexceptions -mthreads $(DEFINES)
INCPATH       = -I"c:\QtSDK\Desktop\Qt\4.8.1\mingw\include" -I"c:\QtSDK\Desktop\Qt\4.8.1\mingw\include\ActiveQt" -I"release" -I"c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads -shared -Wl,--out-implib,release\libcryptopp.a
LIBS        =        -L"c:\QtSDK\Desktop\Qt\4.8.1\mingw\lib"  
QMAKE         = c:\qtsdk\desktop\qt\4.8.1\mingw\bin\qmake.exe
IDC           = c:\QtSDK\Desktop\Qt\4.8.1\mingw\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = 3way.cpp \
		adler32.cpp \
		algparam.cpp \
		arc4.cpp \
		asn.cpp \
		authenc.cpp \
		base32.cpp \
		base64.cpp \
		basecode.cpp \
		bfinit.cpp \
		blowfish.cpp \
		blumshub.cpp \
		camellia.cpp \
		cast.cpp \
		casts.cpp \
		cbcmac.cpp \
		ccm.cpp \
		channels.cpp \
		cmac.cpp \
		cpu.cpp \
		crc.cpp \
		cryptlib.cpp \
		cryptlib_bds.cpp \
		default.cpp \
		des.cpp \
		dessp.cpp \
		dh.cpp \
		dh2.cpp \
		dll.cpp \
		dsa.cpp \
		eax.cpp \
		ec2n.cpp \
		ecp.cpp \
		elgamal.cpp \
		emsa2.cpp \
		esign.cpp \
		files.cpp \
		filters.cpp \
		fips140.cpp \
		gcm.cpp \
		gf256.cpp \
		gf2_32.cpp \
		gf2n.cpp \
		gfpcrypt.cpp \
		gost.cpp \
		gzip.cpp \
		hex.cpp \
		hmac.cpp \
		hrtimer.cpp \
		ida.cpp \
		idea.cpp \
		integer.cpp \
		iterhash.cpp \
		luc.cpp \
		mars.cpp \
		marss.cpp \
		md2.cpp \
		md4.cpp \
		md5.cpp \
		misc.cpp \
		modes.cpp \
		mqueue.cpp \
		mqv.cpp \
		nbtheory.cpp \
		network.cpp \
		oaep.cpp \
		osrng.cpp \
		panama.cpp \
		pch.cpp \
		pkcspad.cpp \
		pssr.cpp \
		pubkey.cpp \
		queue.cpp \
		rabin.cpp \
		randpool.cpp \
		rc2.cpp \
		rc5.cpp \
		rc6.cpp \
		rdtables.cpp \
		rijndael.cpp \
		ripemd.cpp \
		rng.cpp \
		rsa.cpp \
		rw.cpp \
		safer.cpp \
		salsa.cpp \
		seal.cpp \
		seed.cpp \
		serpent.cpp \
		sha.cpp \
		sha3.cpp \
		shacal2.cpp \
		shark.cpp \
		sharkbox.cpp \
		simple.cpp \
		skipjack.cpp \
		socketft.cpp \
		sosemanuk.cpp \
		square.cpp \
		squaretb.cpp \
		tea.cpp \
		tftables.cpp \
		tiger.cpp \
		tigertab.cpp \
		trdlocal.cpp \
		ttmac.cpp \
		twofish.cpp \
		vmac.cpp \
		wait.cpp \
		wake.cpp \
		whrlpool.cpp \
		winpipes.cpp \
		xtr.cpp \
		xtrcrypt.cpp \
		zdeflate.cpp \
		zinflate.cpp \
		zlib.cpp 
OBJECTS       = release/3way.o \
		release/adler32.o \
		release/algparam.o \
		release/arc4.o \
		release/asn.o \
		release/authenc.o \
		release/base32.o \
		release/base64.o \
		release/basecode.o \
		release/bfinit.o \
		release/blowfish.o \
		release/blumshub.o \
		release/camellia.o \
		release/cast.o \
		release/casts.o \
		release/cbcmac.o \
		release/ccm.o \
		release/channels.o \
		release/cmac.o \
		release/cpu.o \
		release/crc.o \
		release/cryptlib.o \
		release/cryptlib_bds.o \
		release/default.o \
		release/des.o \
		release/dessp.o \
		release/dh.o \
		release/dh2.o \
		release/dll.o \
		release/dsa.o \
		release/eax.o \
		release/ec2n.o \
		release/ecp.o \
		release/elgamal.o \
		release/emsa2.o \
		release/esign.o \
		release/files.o \
		release/filters.o \
		release/fips140.o \
		release/gcm.o \
		release/gf256.o \
		release/gf2_32.o \
		release/gf2n.o \
		release/gfpcrypt.o \
		release/gost.o \
		release/gzip.o \
		release/hex.o \
		release/hmac.o \
		release/hrtimer.o \
		release/ida.o \
		release/idea.o \
		release/integer.o \
		release/iterhash.o \
		release/luc.o \
		release/mars.o \
		release/marss.o \
		release/md2.o \
		release/md4.o \
		release/md5.o \
		release/misc.o \
		release/modes.o \
		release/mqueue.o \
		release/mqv.o \
		release/nbtheory.o \
		release/network.o \
		release/oaep.o \
		release/osrng.o \
		release/panama.o \
		release/pch.o \
		release/pkcspad.o \
		release/pssr.o \
		release/pubkey.o \
		release/queue.o \
		release/rabin.o \
		release/randpool.o \
		release/rc2.o \
		release/rc5.o \
		release/rc6.o \
		release/rdtables.o \
		release/rijndael.o \
		release/ripemd.o \
		release/rng.o \
		release/rsa.o \
		release/rw.o \
		release/safer.o \
		release/salsa.o \
		release/seal.o \
		release/seed.o \
		release/serpent.o \
		release/sha.o \
		release/sha3.o \
		release/shacal2.o \
		release/shark.o \
		release/sharkbox.o \
		release/simple.o \
		release/skipjack.o \
		release/socketft.o \
		release/sosemanuk.o \
		release/square.o \
		release/squaretb.o \
		release/tea.o \
		release/tftables.o \
		release/tiger.o \
		release/tigertab.o \
		release/trdlocal.o \
		release/ttmac.o \
		release/twofish.o \
		release/vmac.o \
		release/wait.o \
		release/wake.o \
		release/whrlpool.o \
		release/winpipes.o \
		release/xtr.o \
		release/xtrcrypt.o \
		release/zdeflate.o \
		release/zinflate.o \
		release/zlib.o
DIST          = 
QMAKE_TARGET  = cryptopp
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = cryptopp.dll
DESTDIR_TARGET = release\cryptopp.dll

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.cryptopp.Release  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++ CONFIG+=declarative_debug -o Makefile.Release cryptopp.pro

dist:
	$(ZIP) cryptopp.zip $(SOURCES) $(DIST) cryptopp.pro c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\qconfig.pri c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\modules\qt_webkit_version.pri c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_functions.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_config.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\exclusive_builds.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_pre.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_pre.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\release.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\debug_and_release.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_post.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_post.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\build_pass.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\warn_off.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\declarative_debug.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\rtti.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\exceptions.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\stl.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\shared.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\dll.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\thread.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\moc.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\windows.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\resources.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\uic.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\yacc.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\lex.prf c:\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\3way.o release\adler32.o release\algparam.o release\arc4.o release\asn.o release\authenc.o release\base32.o release\base64.o release\basecode.o release\bfinit.o release\blowfish.o release\blumshub.o release\camellia.o release\cast.o release\casts.o release\cbcmac.o release\ccm.o release\channels.o release\cmac.o release\cpu.o release\crc.o release\cryptlib.o release\cryptlib_bds.o release\default.o release\des.o release\dessp.o release\dh.o release\dh2.o release\dll.o release\dsa.o release\eax.o release\ec2n.o release\ecp.o release\elgamal.o release\emsa2.o release\esign.o release\files.o release\filters.o release\fips140.o release\gcm.o release\gf256.o release\gf2_32.o release\gf2n.o release\gfpcrypt.o release\gost.o release\gzip.o release\hex.o release\hmac.o release\hrtimer.o release\ida.o release\idea.o release\integer.o release\iterhash.o release\luc.o release\mars.o release\marss.o release\md2.o release\md4.o release\md5.o release\misc.o release\modes.o release\mqueue.o release\mqv.o release\nbtheory.o release\network.o release\oaep.o release\osrng.o release\panama.o release\pch.o release\pkcspad.o release\pssr.o release\pubkey.o release\queue.o release\rabin.o release\randpool.o release\rc2.o release\rc5.o release\rc6.o release\rdtables.o release\rijndael.o release\ripemd.o release\rng.o release\rsa.o release\rw.o release\safer.o release\salsa.o release\seal.o release\seed.o release\serpent.o release\sha.o release\sha3.o release\shacal2.o release\shark.o release\sharkbox.o release\simple.o release\skipjack.o release\socketft.o release\sosemanuk.o release\square.o release\squaretb.o release\tea.o release\tftables.o release\tiger.o release\tigertab.o release\trdlocal.o release\ttmac.o release\twofish.o release\vmac.o release\wait.o release\wake.o release\whrlpool.o release\winpipes.o release\xtr.o release\xtrcrypt.o release\zdeflate.o release\zinflate.o release\zlib.o
	-$(DEL_FILE) release\libcryptopp.a

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/3way.o: 3way.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		3way.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\3way.o 3way.cpp

release/adler32.o: adler32.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		adler32.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\adler32.o adler32.cpp

release/algparam.o: algparam.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\algparam.o algparam.cpp

release/arc4.o: arc4.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		arc4.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\arc4.o arc4.cpp

release/asn.o: asn.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		asn.h \
		filters.h \
		queue.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\asn.o asn.cpp

release/authenc.o: authenc.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		authenc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\authenc.o authenc.cpp

release/base32.o: base32.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		base32.h \
		basecode.h \
		filters.h \
		queue.h \
		algparam.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\base32.o base32.cpp

release/base64.o: base64.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		base64.h \
		basecode.h \
		filters.h \
		queue.h \
		algparam.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\base64.o base64.cpp

release/basecode.o: basecode.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		basecode.h \
		filters.h \
		queue.h \
		algparam.h \
		argnames.h \
		fltrimpl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\basecode.o basecode.cpp

release/bfinit.o: bfinit.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		blowfish.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\bfinit.o bfinit.cpp

release/blowfish.o: blowfish.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		blowfish.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\blowfish.o blowfish.cpp

release/blumshub.o: blumshub.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		blumshub.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\blumshub.o blumshub.cpp

release/camellia.o: camellia.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		camellia.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\camellia.o camellia.cpp

release/cast.o: cast.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		cast.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cast.o cast.cpp

release/casts.o: casts.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		cast.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\casts.o casts.cpp

release/cbcmac.o: cbcmac.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		cbcmac.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cbcmac.o cbcmac.cpp

release/ccm.o: ccm.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ccm.h \
		authenc.h \
		modes.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ccm.o ccm.cpp

release/channels.o: channels.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		channels.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\channels.o channels.cpp

release/cmac.o: cmac.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		cmac.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cmac.o cmac.cpp

release/cpu.o: cpu.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cpu.o cpu.cpp

release/crc.o: crc.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\crc.o crc.cpp

release/cryptlib.o: cryptlib.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		filters.h \
		queue.h \
		algparam.h \
		fips140.h \
		argnames.h \
		fltrimpl.h \
		trdlocal.h \
		osrng.h \
		randpool.h \
		rng.h \
		aes.h \
		rijndael.h \
		seckey.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cryptlib.o cryptlib.cpp

release/cryptlib_bds.o: cryptlib_bds.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\cryptlib_bds.o cryptlib_bds.cpp

release/default.o: default.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		default.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h \
		des.h \
		filters.h \
		queue.h \
		algparam.h \
		modes.h \
		strciphr.h \
		argnames.h \
		strciphr.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\default.o default.cpp

release/des.o: des.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		des.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\des.o des.cpp

release/dessp.o: dessp.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		des.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dessp.o dessp.cpp

release/dh.o: dh.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		dh.h \
		gfpcrypt.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		modexppc.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dh.o dh.cpp

release/dh2.o: dh2.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		dh2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dh2.o dh2.cpp

release/dll.o: dll.cpp dll.h \
		aes.h \
		rijndael.h \
		seckey.h \
		cryptlib.h \
		config.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		simple.h \
		secblock.h \
		cbcmac.h \
		ccm.h \
		authenc.h \
		modes.h \
		strciphr.h \
		argnames.h \
		strciphr.cpp \
		pch.h \
		cpu.h \
		algparam.h \
		cmac.h \
		channels.h \
		des.h \
		dh.h \
		gfpcrypt.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		modexppc.h \
		sha.h \
		iterhash.h \
		hmac.h \
		dsa.h \
		ec2n.h \
		gf2n.h \
		eccrypto.h \
		mqv.h \
		ecp.h \
		eccrypto.cpp \
		nbtheory.h \
		oids.h \
		hex.h \
		basecode.h \
		files.h \
		gcm.h \
		mqueue.h \
		osrng.h \
		randpool.h \
		rng.h \
		pkcspad.h \
		pssr.h \
		emsa2.h \
		rsa.h \
		oaep.h \
		rw.h \
		skipjack.h \
		trdlocal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dll.o dll.cpp

release/dsa.o: dsa.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		dsa.h \
		gfpcrypt.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		modexppc.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dsa.o dsa.cpp

release/eax.o: eax.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		eax.h \
		authenc.h \
		modes.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		algparam.h \
		cmac.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\eax.o eax.cpp

release/ec2n.o: ec2n.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ec2n.h \
		gf2n.h \
		algebra.h \
		algebra.cpp \
		integer.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		filters.h \
		queue.h \
		algparam.h \
		pubkey.h \
		modarith.h \
		fips140.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ec2n.o ec2n.cpp

release/ecp.o: ecp.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ecp.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		filters.h \
		queue.h \
		algparam.h \
		pubkey.h \
		fips140.h \
		argnames.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ecp.o ecp.cpp

release/elgamal.o: elgamal.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		elgamal.h \
		modexppc.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		filters.h \
		queue.h \
		algparam.h \
		pubkey.h \
		fips140.h \
		argnames.h \
		dsa.h \
		gfpcrypt.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\elgamal.o elgamal.cpp

release/emsa2.o: emsa2.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		emsa2.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\emsa2.o emsa2.cpp

release/esign.o: esign.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		esign.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		nbtheory.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\esign.o esign.cpp

release/files.o: files.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		files.h \
		filters.h \
		queue.h \
		algparam.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\files.o files.cpp

release/filters.o: filters.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		filters.h \
		queue.h \
		algparam.h \
		mqueue.h \
		fltrimpl.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\filters.o filters.cpp

release/fips140.o: fips140.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		fips140.h \
		trdlocal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\fips140.o fips140.cpp

release/gcm.o: gcm.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gcm.h \
		authenc.h \
		modes.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gcm.o gcm.cpp

release/gf256.o: gf256.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gf256.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gf256.o gf256.cpp

release/gf2_32.o: gf2_32.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gf2_32.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gf2_32.o gf2_32.cpp

release/gf2n.o: gf2n.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gf2n.h \
		algebra.h \
		algebra.cpp \
		integer.h \
		words.h \
		randpool.h \
		filters.h \
		queue.h \
		algparam.h \
		asn.h \
		oids.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gf2n.o gf2n.cpp

release/gfpcrypt.o: gfpcrypt.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gfpcrypt.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		modexppc.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h \
		oids.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gfpcrypt.o gfpcrypt.cpp

release/gost.o: gost.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gost.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gost.o gost.cpp

release/gzip.o: gzip.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		gzip.h \
		zdeflate.h \
		filters.h \
		queue.h \
		algparam.h \
		zinflate.h \
		crc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\gzip.o gzip.cpp

release/hex.o: hex.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		hex.h \
		basecode.h \
		filters.h \
		queue.h \
		algparam.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\hex.o hex.cpp

release/hmac.o: hmac.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		hmac.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\hmac.o hmac.cpp

release/hrtimer.o: hrtimer.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		hrtimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\hrtimer.o hrtimer.cpp

release/ida.o: ida.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ida.h \
		mqueue.h \
		queue.h \
		filters.h \
		algparam.h \
		channels.h \
		algebra.h \
		algebra.cpp \
		integer.h \
		gf2_32.h \
		polynomi.h \
		polynomi.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ida.o ida.cpp

release/idea.o: idea.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		idea.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\idea.o idea.cpp

release/integer.o: integer.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		integer.h \
		modarith.h \
		algebra.h \
		algebra.cpp \
		nbtheory.h \
		algparam.h \
		asn.h \
		filters.h \
		queue.h \
		oids.h \
		words.h \
		pubkey.h \
		eprecomp.h \
		eprecomp.cpp \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\integer.o integer.cpp

release/iterhash.o: iterhash.cpp iterhash.h \
		cryptlib.h \
		config.h \
		stdcpp.h \
		secblock.h \
		misc.h \
		smartptr.h \
		simple.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\iterhash.o iterhash.cpp

release/luc.o: luc.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		luc.h \
		pkcspad.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h \
		oaep.h \
		dh.h \
		gfpcrypt.h \
		modexppc.h \
		hmac.h \
		seckey.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\luc.o luc.cpp

release/mars.o: mars.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		mars.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mars.o mars.cpp

release/marss.o: marss.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		mars.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\marss.o marss.cpp

release/md2.o: md2.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		md2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\md2.o md2.cpp

release/md4.o: md4.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		md4.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\md4.o md4.cpp

release/md5.o: md5.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		md5.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\md5.o md5.cpp

release/misc.o: misc.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		words.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\misc.o misc.cpp

release/modes.o: modes.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		modes.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		algparam.h \
		des.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\modes.o modes.cpp

release/mqueue.o: mqueue.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		mqueue.h \
		queue.h \
		filters.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mqueue.o mqueue.cpp

release/mqv.o: mqv.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		mqv.h \
		gfpcrypt.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		modexppc.h \
		sha.h \
		iterhash.h \
		hmac.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mqv.o mqv.cpp

release/nbtheory.o: nbtheory.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		nbtheory.h \
		integer.h \
		algparam.h \
		modarith.h \
		algebra.h \
		algebra.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\nbtheory.o nbtheory.cpp

release/network.o: network.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		network.h \
		filters.h \
		queue.h \
		algparam.h \
		hrtimer.h \
		wait.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\network.o network.cpp

release/oaep.o: oaep.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		oaep.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\oaep.o oaep.cpp

release/osrng.o: osrng.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		osrng.h \
		randpool.h \
		filters.h \
		queue.h \
		algparam.h \
		rng.h \
		aes.h \
		rijndael.h \
		seckey.h \
		sha.h \
		iterhash.h \
		fips140.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\osrng.o osrng.cpp

release/panama.o: panama.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		panama.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\panama.o panama.cpp

release/pch.o: pch.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pch.o pch.cpp

release/pkcspad.o: pkcspad.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		pkcspad.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pkcspad.o pkcspad.cpp

release/pssr.o: pssr.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		pssr.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		emsa2.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pssr.o pssr.cpp

release/pubkey.o: pubkey.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pubkey.o pubkey.cpp

release/queue.o: queue.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		queue.h \
		filters.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\queue.o queue.cpp

release/rabin.o: rabin.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rabin.h \
		oaep.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		sha.h \
		iterhash.h \
		pssr.h \
		emsa2.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rabin.o rabin.cpp

release/randpool.o: randpool.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		randpool.h \
		filters.h \
		queue.h \
		algparam.h \
		aes.h \
		rijndael.h \
		seckey.h \
		sha.h \
		iterhash.h \
		hrtimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\randpool.o randpool.cpp

release/rc2.o: rc2.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rc2.h \
		seckey.h \
		algparam.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rc2.o rc2.cpp

release/rc5.o: rc5.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rc5.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rc5.o rc5.cpp

release/rc6.o: rc6.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rc6.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rc6.o rc6.cpp

release/rdtables.o: rdtables.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rijndael.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rdtables.o rdtables.cpp

release/rijndael.o: rijndael.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rijndael.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rijndael.o rijndael.cpp

release/ripemd.o: ripemd.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ripemd.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ripemd.o ripemd.cpp

release/rng.o: rng.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rng.h \
		filters.h \
		queue.h \
		algparam.h \
		fips140.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rng.o rng.cpp

release/rsa.o: rsa.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rsa.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		pkcspad.h \
		sha.h \
		iterhash.h \
		oaep.h \
		emsa2.h \
		oids.h \
		nbtheory.h \
		pssr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rsa.o rsa.cpp

release/rw.o: rw.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		rw.h \
		pubkey.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		filters.h \
		queue.h \
		algparam.h \
		eprecomp.h \
		eprecomp.cpp \
		asn.h \
		fips140.h \
		argnames.h \
		nbtheory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rw.o rw.cpp

release/safer.o: safer.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		safer.h \
		seckey.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\safer.o safer.cpp

release/salsa.o: salsa.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		salsa.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\salsa.o salsa.cpp

release/seal.o: seal.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		seal.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\seal.o seal.cpp

release/seed.o: seed.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		seed.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\seed.o seed.cpp

release/serpent.o: serpent.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		serpent.h \
		seckey.h \
		serpentp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\serpent.o serpent.cpp

release/sha.o: sha.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		sha.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sha.o sha.cpp

release/sha3.o: sha3.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		sha3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sha3.o sha3.cpp

release/shacal2.o: shacal2.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		shacal2.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\shacal2.o shacal2.cpp

release/shark.o: shark.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		shark.h \
		seckey.h \
		modes.h \
		strciphr.h \
		argnames.h \
		strciphr.cpp \
		algparam.h \
		gf256.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\shark.o shark.cpp

release/sharkbox.o: sharkbox.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		shark.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sharkbox.o sharkbox.cpp

release/simple.o: simple.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\simple.o simple.cpp

release/skipjack.o: skipjack.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		skipjack.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\skipjack.o skipjack.cpp

release/socketft.o: socketft.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		socketft.h \
		network.h \
		filters.h \
		queue.h \
		algparam.h \
		hrtimer.h \
		winpipes.h \
		wait.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\socketft.o socketft.cpp

release/sosemanuk.o: sosemanuk.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		sosemanuk.h \
		strciphr.h \
		seckey.h \
		argnames.h \
		strciphr.cpp \
		serpentp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sosemanuk.o sosemanuk.cpp

release/square.o: square.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		square.h \
		seckey.h \
		gf256.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\square.o square.cpp

release/squaretb.o: squaretb.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		square.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\squaretb.o squaretb.cpp

release/tea.o: tea.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		tea.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tea.o tea.cpp

release/tftables.o: tftables.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		twofish.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tftables.o tftables.cpp

release/tiger.o: tiger.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		tiger.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tiger.o tiger.cpp

release/tigertab.o: tigertab.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		tiger.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tigertab.o tigertab.cpp

release/trdlocal.o: trdlocal.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		trdlocal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\trdlocal.o trdlocal.cpp

release/ttmac.o: ttmac.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		ttmac.h \
		seckey.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ttmac.o ttmac.cpp

release/twofish.o: twofish.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		twofish.h \
		seckey.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\twofish.o twofish.cpp

release/vmac.o: vmac.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		vmac.h \
		iterhash.h \
		seckey.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\vmac.o vmac.cpp

release/wait.o: wait.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		wait.h \
		hrtimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\wait.o wait.cpp

release/wake.o: wake.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		wake.h \
		seckey.h \
		strciphr.h \
		argnames.h \
		strciphr.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\wake.o wake.cpp

release/whrlpool.o: whrlpool.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		whrlpool.h \
		iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\whrlpool.o whrlpool.cpp

release/winpipes.o: winpipes.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		winpipes.h \
		network.h \
		filters.h \
		queue.h \
		algparam.h \
		hrtimer.h \
		wait.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\winpipes.o winpipes.cpp

release/xtr.o: xtr.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		xtr.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		nbtheory.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\xtr.o xtr.cpp

release/xtrcrypt.o: xtrcrypt.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		xtrcrypt.h \
		xtr.h \
		modarith.h \
		integer.h \
		algebra.h \
		algebra.cpp \
		nbtheory.h \
		algparam.h \
		asn.h \
		filters.h \
		queue.h \
		argnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\xtrcrypt.o xtrcrypt.cpp

release/zdeflate.o: zdeflate.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		zdeflate.h \
		filters.h \
		queue.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\zdeflate.o zdeflate.cpp

release/zinflate.o: zinflate.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		zinflate.h \
		filters.h \
		queue.h \
		algparam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\zinflate.o zinflate.cpp

release/zlib.o: zlib.cpp pch.h \
		cpu.h \
		config.h \
		simple.h \
		cryptlib.h \
		stdcpp.h \
		misc.h \
		smartptr.h \
		secblock.h \
		zlib.h \
		adler32.h \
		zdeflate.h \
		filters.h \
		queue.h \
		algparam.h \
		zinflate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\zlib.o zlib.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

